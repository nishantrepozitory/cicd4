name: qa deploy
on:
  workflow_dispatch:
    inputs:
      url:
        description: 'The URL of the PR'
        required: true

permissions: write-all

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Switch to PR's branch
        id: checkout_branch
        run: |
          PR_NUMBER=$(echo "${{ github.event.inputs.url }}" | awk -F '/' '{print $NF}')
          BRANCH_NAME=$(gh pr view $PR_NUMBER --json headRefName -q .headRefName)
          echo "pull_request_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Check for changes in migrations
        run: |
          changed_files=$(gh pr diff --name-only)
          if echo "$changed_files" | grep -q '^src/migrations/'; then
            echo "Changes detected in migrations. Exiting workflow."
            # exit 1  # Exit with failure status
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Get Pull Request Number
        id: pr
        run: echo "pull_request_number=$(gh pr view --json number -q .number)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Set Version
        id: set-version
        run: |
          echo "version=qa-${{ steps.pr.outputs.pull_request_number }}" >> $GITHUB_OUTPUT
  
      - name: Set short git commit SHA
        id: commit-sha
        uses: prompt/actions-commit-hash@v2

      # New Step to Print the Version
      - name: Print version
        run: |
          echo "Version set: ${{ steps.set_version.outputs.version }}"

      # New Step to Print the Commit SHA
      - name: Print commit SHA
        run: |
          echo "Commit SHA: ${{ steps.commit_sha.outputs.commit_sha }}"